[testandroid]
name = kompex
prefix = kompex_binding
classes = SQLiteDatabase SQLiteStatement
extra_arguments = -D_SIZE_T_DEFINED_ -nostdinc -nostdinc++ -I%(androidndkdir)s/platforms/android-14/arch-arm/usr/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.6/libs/armeabi-v7a/include -I%(androidndkdir)s/sources/cxx-stl/gnu-libstdc++/4.6/include -I%(clangllvmdir)s/lib/clang/3.1/include -I%(cxxgeneratordir)s/../external/Sqlite -x c++
headers = %(cxxgeneratordir)s/../external/Sqlite/KompexSQLitePrerequisites.h %(cxxgeneratordir)s/../external/Sqlite/KompexSQLiteDatabase.h %(cxxgeneratordir)s/../external/Sqlite/KompexSQLiteStatement.h %(cxxgeneratordir)s/../external/Sqlite/KompexSQLiteException.h %(cxxgeneratordir)s/../external/Sqlite/KompexSQLiteStreamRedirection.h %(cxxgeneratordir)s/../external/Sqlite/sqlite3.h %(cxxgeneratordir)s/../external/Sqlite/sqlite3ext.h
target_namespace = kompex
remove_prefix =
skip = SQLiteStatement::[Vmprintf]
base_objects =
abstract_classes =
classes_have_type_info = no
rename =
rename_functions =
rename_classes =
# classes for which there will be no "parent" lookup
classes_have_no_parents =

# base classes which will be skipped when their sub-classes found them.
base_classes_to_skip =

# Determining whether to use script object(js object) to control the lifecycle of native(cpp) object or the other way around. Supported values are 'yes' or 'no'.
script_control_cpp = yes
